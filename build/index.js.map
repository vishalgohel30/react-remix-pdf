{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../app/routes/_index.tsx", "../app/component/Pdf.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { isbot } from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  // This is ignored so we can keep it in the template for visibility.  Feel\n  // free to delete this parameter in your app if you're not using it!\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\") || \"\")\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const links: LinksFunction = () => [\n  ...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\n];\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "// // \"use client\";\n// import { useEffect, useRef, useState } from 'react';\n// import PSPDFKit from 'pspdfkit';\n\n// function Index({document}) {\n//   const containerRef = useRef<HTMLDivElement | null>(null);\n\n  \n\n// \tuseEffect(() => {\n// \t\tif(document){\n// \t\t\tconst container = containerRef.current;\n// \t\t\tlet instance, PSPDFKit;\n// \t\t\t(async function () {\n// \t\t\t\tPSPDFKit = (await import('pspdfkit')).default;\n// \t\t\t\tinstance = await PSPDFKit.load({\n// \t\t\t\t\tcontainer,\n// \t\t\t\t\tdocument,\n// \t\t\t\t\tbaseUrl: `${window.location.protocol}//${window.location.host}/`,\n// \t\t\t\t\t// licenseKey: 'YOUR_LICENSE_KEY_GOES_HERE',\n// \t\t\t\t});\n// \t\t\t})();\n// \t\t\treturn () => PSPDFKit && PSPDFKit.unload(container);\n\t\t\n// \t\t}\n// \t}, [document]);\n\n//   return (<div ref={containerRef} style={{ height: '100vh' }} />);\n// }\n\n// const PdfList = [\n// \t{name:'pdf1', document:\"https://pdftron.s3.amazonaws.com/downloads/pl/webviewer-demo.pdf\"},\n// \t{name:'pdf2', document:\"https://www.africau.edu/images/default/sample.pdf\"},\n// \t{name:'pdf3', document:\"https://www.clickdimensions.com/links/TestPDFfile.pdf\"},\n// \t{name:'pdf4', document:\"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\"},\n// \t{name:'pdf5', document:\"https://s29.q4cdn.com/175625835/files/doc_downloads/test.pdf\"},\n// ]\n\n// const PdfView = () =>{\n// \tconst [document, setDocument] = useState(\"\");\n\n// \treturn (<>\n// \t<div>{PdfList.map(({name})=><div key={name} onClick={()=>{setDocument(name)}}>{name}</div>)}</div>\n// \t<Index  document={document}/>\n// \t</>)\n// }\n// export default PdfView\n\nimport React from 'react'\nimport PdfView from '~/component/Pdf'\n\ntype Props = {}\n\nexport default function _index({}: Props) {\n  return (\n\t<div>Hello <br/>\n\n\n\t\t<PdfView />\n\t</div>\n  )\n}", "// \"use client\";\nimport { useEffect, useRef, useState } from 'react';\nimport PSPDFKit from 'pspdfkit';\n\nfunction Index({document}) {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n\t// useEffect(() => {\n\t// \t\tconst container = containerRef.current;\n\n\t// \tif(document){\n\t// \t\tlet instance, PSPDFKit;\n\t// \t\t(async function () {\n\t// \t\t\tPSPDFKit = (await import('pspdfkit')).default;\n\t// \t\t\tinstance = await PSPDFKit.load({\n\t// \t\t\t\tcontainer,\n\t// \t\t\t\tdocument,\n\t// \t\t\t\tbaseUrl: `${window.location.protocol}//${window.location.host}/`,\n\t// \t\t\t\t// licenseKey: 'YOUR_LICENSE_KEY_GOES_HERE',\n\t// \t\t\t});\n\t// \t\t})();\n    //         // PSPDFKit && PSPDFKit.unload(container);\n    //         // setTimeout(()=>{\n    //         //     console.log('calll')\n    //         //     PSPDFKit && PSPDFKit.unload(container);\n    //         // },6000)\n\t// \t\treturn () => PSPDFKit && PSPDFKit.unload(container);\n\t\t\n\t// \t}\n\n      \n\t// }, [document]);\n\n    useEffect(() => {\n\t\tif(document){\n\t\t\tconst container = containerRef.current;\n\t\t\tlet instance, PSPDFKit;\n\t\t\t(async function () {\n\t\t\t\tPSPDFKit = (await import('pspdfkit')).default;\n\t\t\t\tinstance = await PSPDFKit.load({\n\t\t\t\t\tcontainer,\n\t\t\t\t\tdocument,\n\t\t\t\t\tbaseUrl: `${window.location.protocol}//${window.location.host}/`,\n\t\t\t\t\t// licenseKey: 'YOUR_LICENSE_KEY_GOES_HERE',\n\t\t\t\t});\n\t\t\t})();\n\t\t\treturn () => PSPDFKit && PSPDFKit.unload(container);\n\t\t\n\t\t}\n\t}, [document]);\n\n  return (<div ref={containerRef} style={{ height: '100vh' }} />);\n}\n\nconst PdfList = [\n\t{name:'pdf1', document:\"https://pdftron.s3.amazonaws.com/downloads/pl/webviewer-demo.pdf\"},\n\t{name:'pdf2', document:\"https://www.africau.edu/images/default/sample.pdf\"},\n\t{name:'pdf3', document:\"https://www.clickdimensions.com/links/TestPDFfile.pdf\"},\n\t{name:'pdf4', document:\"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\"},\n\t{name:'pdf5', document:\"https://s29.q4cdn.com/175625835/files/doc_downloads/test.pdf\"},\n]\n\nconst PdfView = () =>{\n\tconst [document, setDocument] = useState(\"\");\n\n\treturn (<>\n\t<div>{PdfList.map(({name, document})=><div key={name} onMouseDown={()=>setDocument('')} onClick={()=>{\n        \n        setTimeout(()=>{\n            setDocument(document)\n        },1000)\n        }}>{name}</div>)}</div>\n\t{document && <Index  document={document}/>}\n\t</>)\n}\nexport default PdfView", "export default {'entry':{'module':'/build/entry.client-5VSXNPIW.js','imports':['/build/_shared/chunk-R3SHD6ON.js','/build/_shared/chunk-D55GZISB.js','/build/_shared/chunk-VP6AN7CR.js','/build/_shared/chunk-5ZXSXVQH.js','/build/_shared/chunk-6Q656ALH.js','/build/_shared/chunk-RYQ7GX7C.js','/build/_shared/chunk-3CQVQBGT.js','/build/_shared/chunk-NGWUSV3G.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-CYYZS45F.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-M2WMACMU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'31bceb40','hmr':{'runtime':'/build/_shared/chunk-5ZXSXVQH.js','timestamp':1711089794521},'url':'/build/manifest-31BCEB40.js'};", "\nimport * as entryServer from \"/Users/apple/Desktop/demo-pdf copy/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "jsxDEV", "document", "jsxDEV"]
}
