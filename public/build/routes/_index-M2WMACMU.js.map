{
  "version": 3,
  "sources": ["../../../app/component/Pdf.tsx", "../../../app/routes/_index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/component/Pdf.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/component/Pdf.tsx\");\n  import.meta.hot.lastModified = \"1706729463000\";\n}\n// REMIX HMR END\n\n// \"use client\";\nimport { useEffect, useRef, useState } from 'react';\nfunction Index({\n  document\n}) {\n  _s();\n  const containerRef = useRef(null);\n\n  // useEffect(() => {\n  // \t\tconst container = containerRef.current;\n\n  // \tif(document){\n  // \t\tlet instance, PSPDFKit;\n  // \t\t(async function () {\n  // \t\t\tPSPDFKit = (await import('pspdfkit')).default;\n  // \t\t\tinstance = await PSPDFKit.load({\n  // \t\t\t\tcontainer,\n  // \t\t\t\tdocument,\n  // \t\t\t\tbaseUrl: `${window.location.protocol}//${window.location.host}/`,\n  // \t\t\t\t// licenseKey: 'YOUR_LICENSE_KEY_GOES_HERE',\n  // \t\t\t});\n  // \t\t})();\n  //         // PSPDFKit && PSPDFKit.unload(container);\n  //         // setTimeout(()=>{\n  //         //     console.log('calll')\n  //         //     PSPDFKit && PSPDFKit.unload(container);\n  //         // },6000)\n  // \t\treturn () => PSPDFKit && PSPDFKit.unload(container);\n\n  // \t}\n\n  // }, [document]);\n\n  useEffect(() => {\n    if (document) {\n      const container = containerRef.current;\n      let instance, PSPDFKit;\n      (async function () {\n        PSPDFKit = (await import('pspdfkit')).default;\n        instance = await PSPDFKit.load({\n          container,\n          document,\n          baseUrl: `${window.location.protocol}//${window.location.host}/`\n          // licenseKey: 'YOUR_LICENSE_KEY_GOES_HERE',\n        });\n      })();\n      return () => PSPDFKit && PSPDFKit.unload(container);\n    }\n  }, [document]);\n  return <div ref={containerRef} style={{\n    height: '100vh'\n  }} />;\n}\n_s(Index, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = Index;\nconst PdfList = [{\n  name: 'pdf1',\n  document: \"https://pdftron.s3.amazonaws.com/downloads/pl/webviewer-demo.pdf\"\n}, {\n  name: 'pdf2',\n  document: \"https://www.africau.edu/images/default/sample.pdf\"\n}, {\n  name: 'pdf3',\n  document: \"https://www.clickdimensions.com/links/TestPDFfile.pdf\"\n}, {\n  name: 'pdf4',\n  document: \"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\"\n}, {\n  name: 'pdf5',\n  document: \"https://s29.q4cdn.com/175625835/files/doc_downloads/test.pdf\"\n}];\nconst PdfView = () => {\n  _s2();\n  const [document, setDocument] = useState(\"\");\n  return <>\n\t<div>{PdfList.map(({\n        name,\n        document\n      }) => <div key={name} onMouseDown={() => setDocument('')} onClick={() => {\n        setTimeout(() => {\n          setDocument(document);\n        }, 1000);\n      }}>{name}</div>)}</div>\n\t{document && <Index document={document} />}\n\t</>;\n};\n_s2(PdfView, \"h+1VcpYzBnTwvtajiCqKllsm1GQ=\");\n_c2 = PdfView;\nexport default PdfView;\nvar _c, _c2;\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"PdfView\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/routes/_index.tsx\"\n);\nimport.meta.hot.lastModified = \"1706727793000\";\n}\n// REMIX HMR END\n\n// // \"use client\";\n// import { useEffect, useRef, useState } from 'react';\n// import PSPDFKit from 'pspdfkit';\n\n// function Index({document}) {\n//   const containerRef = useRef<HTMLDivElement | null>(null);\n\n  \n\n// \tuseEffect(() => {\n// \t\tif(document){\n// \t\t\tconst container = containerRef.current;\n// \t\t\tlet instance, PSPDFKit;\n// \t\t\t(async function () {\n// \t\t\t\tPSPDFKit = (await import('pspdfkit')).default;\n// \t\t\t\tinstance = await PSPDFKit.load({\n// \t\t\t\t\tcontainer,\n// \t\t\t\t\tdocument,\n// \t\t\t\t\tbaseUrl: `${window.location.protocol}//${window.location.host}/`,\n// \t\t\t\t\t// licenseKey: 'YOUR_LICENSE_KEY_GOES_HERE',\n// \t\t\t\t});\n// \t\t\t})();\n// \t\t\treturn () => PSPDFKit && PSPDFKit.unload(container);\n\t\t\n// \t\t}\n// \t}, [document]);\n\n//   return (<div ref={containerRef} style={{ height: '100vh' }} />);\n// }\n\n// const PdfList = [\n// \t{name:'pdf1', document:\"https://pdftron.s3.amazonaws.com/downloads/pl/webviewer-demo.pdf\"},\n// \t{name:'pdf2', document:\"https://www.africau.edu/images/default/sample.pdf\"},\n// \t{name:'pdf3', document:\"https://www.clickdimensions.com/links/TestPDFfile.pdf\"},\n// \t{name:'pdf4', document:\"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\"},\n// \t{name:'pdf5', document:\"https://s29.q4cdn.com/175625835/files/doc_downloads/test.pdf\"},\n// ]\n\n// const PdfView = () =>{\n// \tconst [document, setDocument] = useState(\"\");\n\n// \treturn (<>\n// \t<div>{PdfList.map(({name})=><div key={name} onClick={()=>{setDocument(name)}}>{name}</div>)}</div>\n// \t<Index  document={document}/>\n// \t</>)\n// }\n// export default PdfView\n\nimport React from 'react'\nimport PdfView from '~/component/Pdf'\n\ntype Props = {}\n\nexport default function _index({}: Props) {\n  return (\n\t<div>Hello <br/>\n\n\n\t\t<PdfView />\n\t</div>\n  )\n}"],
  "mappings": "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",
  "names": ["document", "import_jsx_dev_runtime"]
}
